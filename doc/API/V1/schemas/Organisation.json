{
   "$id" : "Organisation.json",
   "$schema" : "http://json-schema.org/draft-07/schema",
   "description" : "The organisation object.",
   "type" : "object",
   "properties" : {
      "ChangeBy" : {
         "type" : "integer",
         "readOnly" : true
      },
      "ChangeTime" : {
         "type" : "string",
         "readOnly" : true
      },
      "City" : {
         "type" : "string",
         "readOnly" : true
      },
      "Comment" : {
         "anyOf" : [
            {
               "type" : "string"
            },
            {
               "type" : "null"
            }
         ],
         "readOnly" : true
      },
      "Contacts" : {
         "description" : "added via include \"Contacts\"",
         "type" : "array",
         "items" : {
            "$ref" : "#/definitions/_Contact_json"
         },
         "readOnly" : true
      },
      "Country" : {
         "type" : "string",
         "readOnly" : true
      },
      "CreateBy" : {
         "type" : "integer",
         "readOnly" : true
      },
      "CreateTime" : {
         "type" : "string",
         "readOnly" : true
      },
      "DynamicFields" : {
         "description" : "added via include \"DynamicFields\"",
         "type" : "array",
         "items" : {
            "$ref" : "#/definitions/_DynamicFieldValue_json"
         },
         "readOnly" : true
      },
      "ID" : {
         "type" : "integer",
         "readOnly" : true
      },
      "Name" : {
         "type" : "string",
         "readOnly" : true
      },
      "Number" : {
         "type" : "string",
         "readOnly" : true
      },
      "Street" : {
         "type" : "string",
         "readOnly" : true
      },
      "Tickets" : {
         "description" : "added via include \"Tickets\"",
         "type" : "array",
         "items" : {
            "$ref" : "#/definitions/_Ticket_json"
         },
         "readOnly" : true
      },
      "Url" : {
         "type" : "string",
         "readOnly" : true
      },
      "ValidID" : {
         "type" : "integer",
         "readOnly" : true
      },
      "Zip" : {
         "type" : "string",
         "readOnly" : true
      }
   },
   "required" : [
      "ChangeBy",
      "ChangeTime",
      "CreateBy",
      "CreateTime",
      "ID",
      "Name",
      "Number",
      "ValidID"
   ],
   "definitions" : {
      "_Contact_json" : {
         "$id" : "Contact.json",
         "$schema" : "http://json-schema.org/draft-07/schema",
         "description" : "The contact object.",
         "type" : "object",
         "properties" : {
            "AssignedConfigItems" : {
               "description" : "A list of asset IDs, added via include \"AssignedConfigItems\"",
               "type" : "array",
               "items" : {
                  "type" : "number"
               },
               "readOnly" : true
            },
            "AssignedUserID" : {
               "anyOf" : [
                  {
                     "type" : "integer"
                  },
                  {
                     "type" : "null"
                  }
               ],
               "readOnly" : true
            },
            "ChangeBy" : {
               "type" : "integer",
               "readOnly" : true
            },
            "ChangeTime" : {
               "type" : "string",
               "readOnly" : true
            },
            "City" : {
               "anyOf" : [
                  {
                     "type" : "string"
                  },
                  {
                     "type" : "null"
                  }
               ],
               "readOnly" : true
            },
            "Comment" : {
               "anyOf" : [
                  {
                     "type" : "string"
                  },
                  {
                     "type" : "null"
                  }
               ],
               "readOnly" : true
            },
            "Country" : {
               "anyOf" : [
                  {
                     "type" : "string"
                  },
                  {
                     "type" : "null"
                  }
               ],
               "readOnly" : true
            },
            "CreateBy" : {
               "type" : "integer",
               "readOnly" : true
            },
            "CreateTime" : {
               "type" : "string",
               "readOnly" : true
            },
            "DynamicFields" : {
               "description" : "added via include \"DynamicFields\"",
               "type" : "array",
               "items" : {
                  "$ref" : "#/definitions/_DynamicFieldValue_json"
               },
               "readOnly" : true
            },
            "Email" : {
               "type" : "string",
               "readOnly" : true
            },
            "Fax" : {
               "anyOf" : [
                  {
                     "type" : "string"
                  },
                  {
                     "type" : "null"
                  }
               ],
               "readOnly" : true
            },
            "Firstname" : {
               "type" : "string",
               "readOnly" : true
            },
            "Fullname" : {
               "type" : "string",
               "readOnly" : true
            },
            "ID" : {
               "type" : "integer",
               "readOnly" : true
            },
            "Lastname" : {
               "type" : "string",
               "readOnly" : true
            },
            "Login" : {
               "type" : "string",
               "readOnly" : true
            },
            "Mobile" : {
               "anyOf" : [
                  {
                     "type" : "string"
                  },
                  {
                     "type" : "null"
                  }
               ],
               "readOnly" : true
            },
            "OrganisationIDs" : {
               "type" : "array",
               "items" : {
                  "type" : "integer"
               },
               "readOnly" : true
            },
            "Phone" : {
               "anyOf" : [
                  {
                     "type" : "string"
                  },
                  {
                     "type" : "null"
                  }
               ],
               "readOnly" : true
            },
            "PrimaryOrganisationID" : {
               "type" : "integer",
               "readOnly" : true
            },
            "Street" : {
               "anyOf" : [
                  {
                     "type" : "string"
                  },
                  {
                     "type" : "null"
                  }
               ],
               "readOnly" : true
            },
            "TicketStats" : {
               "description" : "An object with numbers for new, open, pending and escalated tickets of this contact.",
               "type" : "object",
               "properties" : {
                  "EscalatedCount" : {
                     "type" : "integer",
                     "readOnly" : true
                  },
                  "NewCount" : {
                     "type" : "integer",
                     "readOnly" : true
                  },
                  "OpenCount" : {
                     "type" : "integer",
                     "readOnly" : true
                  },
                  "PendingReminderCount" : {
                     "type" : "integer",
                     "readOnly" : true
                  }
               },
               "readOnly" : true
            },
            "Tickets" : {
               "description" : "added via include \"Tickets\"",
               "type" : "array",
               "items" : {
                  "$ref" : "#/definitions/_Ticket_json"
               },
               "readOnly" : true
            },
            "Title" : {
               "type" : "string",
               "readOnly" : true
            },
            "User" : {
               "description" : "added via include \"User\". See /system/users resource for details.",
               "type" : "object",
               "readOnly" : true
            },
            "ValidID" : {
               "type" : "integer",
               "readOnly" : true
            },
            "Zip" : {
               "anyOf" : [
                  {
                     "type" : "string"
                  },
                  {
                     "type" : "null"
                  }
               ],
               "readOnly" : true
            }
         },
         "required" : [
            "AssignedUserID",
            "ChangeBy",
            "ChangeTime",
            "City",
            "Comment",
            "Country",
            "CreateBy",
            "CreateTime",
            "Email",
            "Fax",
            "Firstname",
            "Fullname",
            "ID",
            "Lastname",
            "Mobile",
            "OrganisationIDs",
            "Phone",
            "PrimaryOrganisationID",
            "Street",
            "Title",
            "ValidID",
            "Zip"
         ]
      },
      "_DynamicFieldValue_json" : {
         "$id" : "DynamicFieldValue.json",
         "$schema" : "http://json-schema.org/draft-07/schema",
         "description" : "The dynamic field value object.",
         "type" : "object",
         "properties" : {
            "DisplayValue" : {
               "description" : "prepared values ",
               "type" : "string",
               "readOnly" : true
            },
            "DisplayValueHTML" : {
               "type" : "string",
               "readOnly" : true
            },
            "DisplayValueShort" : {
               "type" : "string",
               "readOnly" : true
            },
            "ID" : {
               "description" : "ID of the dynamic field",
               "type" : "integer",
               "readOnly" : true
            },
            "Label" : {
               "description" : "label of the dynamic field",
               "type" : "string",
               "readOnly" : true
            },
            "Name" : {
               "description" : "name of the dynamic field",
               "type" : "string",
               "readOnly" : true
            },
            "PreparedValue" : {
               "description" : "prepared values - e.g. display values of a selection field instead of the keys",
               "type" : "array",
               "items" : {
                  "type" : "string"
               },
               "readOnly" : true
            },
            "Value" : {
               "type" : "array",
               "items" : {
                  "type" : "string"
               },
               "readOnly" : true
            }
         },
         "required" : [
            "DisplayValue",
            "DisplayValueHTML",
            "DisplayValueShort",
            "ID",
            "Label",
            "Name",
            "PreparedValue",
            "Value"
         ]
      },
      "_TicketArticleAttachment_json" : {
         "$id" : "TicketArticleAttachment.json",
         "$schema" : "http://json-schema.org/draft-07/schema",
         "description" : "The ticket article attachment object.",
         "type" : "object",
         "properties" : {
            "Content" : {
               "description" : "added via include \"Content\" (base64 encoded)",
               "type" : "string",
               "readOnly" : true
            },
            "ContentAlternative" : {
               "type" : "string",
               "readOnly" : true
            },
            "ContentID" : {
               "type" : "string",
               "readOnly" : true
            },
            "ContentType" : {
               "type" : "string",
               "readOnly" : true
            },
            "Disposition" : {
               "type" : "string",
               "readOnly" : true
            },
            "Filename" : {
               "type" : "string",
               "readOnly" : true
            },
            "Filesize" : {
               "type" : "string",
               "readOnly" : true
            },
            "FilesizeRaw" : {
               "type" : "string",
               "readOnly" : true
            },
            "ID" : {
               "type" : "integer",
               "readOnly" : true
            }
         },
         "required" : [
            "ContentAlternative",
            "ContentID",
            "ContentType",
            "Disposition",
            "Filename",
            "Filesize",
            "FilesizeRaw",
            "ID"
         ]
      },
      "_TicketArticleFlag_json" : {
         "$id" : "TicketArticleFlag.json",
         "$schema" : "http://json-schema.org/draft-07/schema",
         "description" : "The ticket article flag object.",
         "type" : "object",
         "properties" : {
            "ArticleID" : {
               "type" : "integer",
               "readOnly" : true
            },
            "Name" : {
               "type" : "string",
               "readOnly" : true
            },
            "Value" : {
               "type" : "string",
               "readOnly" : true
            }
         },
         "required" : [
            "ArticleID",
            "Name",
            "Value"
         ]
      },
      "_TicketArticle_json" : {
         "$id" : "TicketArticle.json",
         "$schema" : "http://json-schema.org/draft-07/schema",
         "description" : "The ticket article object.",
         "type" : "object",
         "properties" : {
            "ArticleID" : {
               "type" : "integer",
               "readOnly" : true
            },
            "AttachmentCount" : {
               "type" : "integer",
               "readOnly" : true
            },
            "Attachments" : {
               "description" : "added via include \"Attachments\"",
               "type" : "array",
               "items" : {
                  "$ref" : "#/definitions/_TicketArticleAttachment_json"
               },
               "readOnly" : true
            },
            "Bcc" : {
               "type" : "string",
               "readOnly" : true
            },
            "BccRealname" : {
               "description" : "realnames from \"Bcc\" (if email address has no real name, email address is used)",
               "type" : "string",
               "readOnly" : true
            },
            "Body" : {
               "type" : "string",
               "readOnly" : true
            },
            "Cc" : {
               "type" : "string",
               "readOnly" : true
            },
            "CcRealname" : {
               "description" : "realnames from \"Cc\" (if email address has no real name, email address is used)",
               "type" : "string",
               "readOnly" : true
            },
            "ChangeTime" : {
               "type" : "string",
               "readOnly" : true
            },
            "ChangedBy" : {
               "type" : "integer",
               "readOnly" : true
            },
            "ChannelID" : {
               "type" : "integer",
               "readOnly" : true
            },
            "Charset" : {
               "type" : "string",
               "readOnly" : true
            },
            "ContentCharset" : {
               "type" : "string",
               "readOnly" : true
            },
            "ContentType" : {
               "type" : "string",
               "readOnly" : true
            },
            "CreateTime" : {
               "type" : "string",
               "readOnly" : true
            },
            "CreatedBy" : {
               "type" : "integer",
               "readOnly" : true
            },
            "CustomerVisible" : {
               "type" : "integer",
               "readOnly" : true
            },
            "DynamicFields" : {
               "description" : "added via include \"DynamicFields\"",
               "type" : "array",
               "items" : {
                  "$ref" : "#/definitions/_DynamicFieldValue_json"
               },
               "readOnly" : true
            },
            "Flags" : {
               "description" : "added via include \"Flags\"",
               "type" : "array",
               "items" : {
                  "$ref" : "#/definitions/_TicketArticleFlag_json"
               },
               "readOnly" : true
            },
            "From" : {
               "type" : "string",
               "readOnly" : true
            },
            "FromRealname" : {
               "description" : "realnames from \"From\" (if email address has no real name, email address is used)",
               "type" : "string",
               "readOnly" : true
            },
            "InReplyTo" : {
               "type" : "string",
               "readOnly" : true
            },
            "IncommingTime" : {
               "type" : "integer",
               "readOnly" : true
            },
            "MessageID" : {
               "type" : "string",
               "readOnly" : true
            },
            "MimeType" : {
               "type" : "string",
               "readOnly" : true
            },
            "NotSent" : {
               "description" : " if article is an outgoing email article which could not be sent",
               "type" : "integer",
               "readOnly" : true
            },
            "NotSentError" : {
               "description" : "error string if article is an outgoing email article which could not be sent",
               "type" : "string",
               "readOnly" : true
            },
            "Plain" : {
               "description" : "added via include \"Plain\" - the source string of the message if it is an email article (channel)",
               "type" : "string",
               "readOnly" : true
            },
            "References" : {
               "type" : "string",
               "readOnly" : true
            },
            "ReplyTo" : {
               "type" : "string",
               "readOnly" : true
            },
            "SMIMEEncrypted" : {
               "description" : " if article is an encrypted email article",
               "type" : "integer",
               "readOnly" : true
            },
            "SMIMEEncryptedError" : {
               "description" : "error string if article is an encrypted email article but could not be decrypted",
               "type" : "string",
               "readOnly" : true
            },
            "SMIMESigned" : {
               "description" : " if article is a signed email article",
               "type" : "integer",
               "readOnly" : true
            },
            "SMIMESignedError" : {
               "description" : "error string if article is a signed email article but could not be verified",
               "type" : "string",
               "readOnly" : true
            },
            "SenderType" : {
               "type" : "string",
               "readOnly" : true
            },
            "SenderTypeID" : {
               "type" : "integer",
               "readOnly" : true
            },
            "Subject" : {
               "type" : "string",
               "readOnly" : true
            },
            "TicketID" : {
               "type" : "integer",
               "readOnly" : true
            },
            "TimeUnits" : {
               "type" : "integer",
               "readOnly" : true
            },
            "To" : {
               "type" : "string",
               "readOnly" : true
            },
            "ToRealname" : {
               "description" : "realnames from \"To\" (if email address has no real name, email address is used)",
               "type" : "string",
               "readOnly" : true
            },
            "Unseen" : {
               "type" : "integer",
               "readOnly" : true
            }
         },
         "required" : [
            "ArticleID",
            "Bcc",
            "BccRealname",
            "Body",
            "Cc",
            "CcRealname",
            "ChangeTime",
            "ChangedBy",
            "Channel",
            "ChannelID",
            "Charset",
            "ContentCharset",
            "ContentType",
            "CreateTime",
            "CreatedBy",
            "CustomerVisible",
            "From",
            "FromRealname",
            "InReplyTo",
            "IncomingTime",
            "MessageID",
            "MimeType",
            "NotSentError",
            "NotSent",
            "References",
            "ReplyTo",
            "SenderType",
            "SenderTypeID",
            "SMIMEEncrypted",
            "SMIMEEncryptedError",
            "SMIMESigned",
            "SMIMESignedError",
            "Subject",
            "TicketID",
            "TimeUnits",
            "To",
            "ToRealname",
            "Unseen"
         ]
      },
      "_TicketHistory_json" : {
         "$id" : "TicketHistory.json",
         "$schema" : "http://json-schema.org/draft-07/schema",
         "description" : "The ticket history object.",
         "type" : "object",
         "properties" : {
            "ArticleID" : {
               "type" : "integer",
               "readOnly" : true
            },
            "CreateBy" : {
               "type" : "integer",
               "readOnly" : true
            },
            "CreateTime" : {
               "type" : "string",
               "readOnly" : true
            },
            "HistoryID" : {
               "type" : "integer",
               "readOnly" : true
            },
            "HistoryType" : {
               "type" : "string",
               "readOnly" : true
            },
            "HistoryTypeID" : {
               "type" : "integer",
               "readOnly" : true
            },
            "Name" : {
               "type" : "string",
               "readOnly" : true
            },
            "OwnerID" : {
               "type" : "integer",
               "readOnly" : true
            },
            "PriorityID" : {
               "type" : "integer",
               "readOnly" : true
            },
            "QueueID" : {
               "type" : "integer",
               "readOnly" : true
            },
            "StateID" : {
               "type" : "integer",
               "readOnly" : true
            },
            "TicketID" : {
               "type" : "integer",
               "readOnly" : true
            },
            "TypeID" : {
               "type" : "integer",
               "readOnly" : true
            }
         },
         "required" : [
            "ArticleID",
            "CreateBy",
            "CreateTime",
            "HistoryID",
            "HistoryType",
            "HistoryTypeID",
            "Name",
            "OwnerID",
            "PriorityID",
            "QueueID",
            "StateID",
            "TicketID",
            "TypeID"
         ]
      },
      "_Ticket_json" : {
         "$id" : "Ticket.json",
         "$schema" : "http://json-schema.org/draft-07/schema",
         "description" : "The ticket object.",
         "type" : "object",
         "properties" : {
            "AccountedTime" : {
               "description" : "added via include \"AccountedTime\". Sum of all time units of the ticket and its articles.",
               "type" : "integer",
               "readOnly" : true
            },
            "Age" : {
               "type" : "integer",
               "readOnly" : true
            },
            "ArchiveFlag" : {
               "type" : "string",
               "readOnly" : true
            },
            "Articles" : {
               "description" : "added via include \"Articles\"",
               "type" : "array",
               "items" : {
                  "$ref" : "#/definitions/_TicketArticle_json"
               },
               "readOnly" : true
            },
            "ChangeBy" : {
               "type" : "integer",
               "readOnly" : true
            },
            "Changed" : {
               "type" : "string",
               "readOnly" : true
            },
            "ContactID" : {
               "type" : "string",
               "readOnly" : true
            },
            "CreateBy" : {
               "type" : "integer",
               "readOnly" : true
            },
            "CreateTimeUnix" : {
               "type" : "integer",
               "readOnly" : true
            },
            "Created" : {
               "type" : "string",
               "readOnly" : true
            },
            "DynamicFields" : {
               "description" : "added via include \"DynamicFields\"",
               "type" : "array",
               "items" : {
                  "$ref" : "#/definitions/_DynamicFieldValue_json"
               },
               "readOnly" : true
            },
            "History" : {
               "description" : "added via include \"History\"",
               "type" : "array",
               "items" : {
                  "$ref" : "#/definitions/_TicketHistory_json"
               },
               "readOnly" : true
            },
            "LinkCount" : {
               "description" : "added via include \"LinkCount\"",
               "type" : "integer",
               "readOnly" : true
            },
            "Lock" : {
               "type" : "string",
               "readOnly" : true
            },
            "LockID" : {
               "type" : "integer",
               "readOnly" : true
            },
            "OrganisationID" : {
               "type" : "string",
               "readOnly" : true
            },
            "Owner" : {
               "type" : "string",
               "readOnly" : true
            },
            "OwnerID" : {
               "type" : "integer",
               "readOnly" : true
            },
            "PendingTime" : {
               "type" : "string",
               "readOnly" : true
            },
            "PendingTimeUnix" : {
               "type" : "integer",
               "readOnly" : true
            },
            "Priority" : {
               "type" : "string",
               "readOnly" : true
            },
            "PriorityID" : {
               "type" : "integer",
               "readOnly" : true
            },
            "Queue" : {
               "type" : "string",
               "readOnly" : true
            },
            "QueueID" : {
               "type" : "integer",
               "readOnly" : true
            },
            "Responsible" : {
               "type" : "string",
               "readOnly" : true
            },
            "ResponsibleID" : {
               "type" : "integer",
               "readOnly" : true
            },
            "State" : {
               "type" : "string",
               "readOnly" : true
            },
            "StateID" : {
               "type" : "integer",
               "readOnly" : true
            },
            "StateIDPrevious" : {
               "description" : "added via include \"StatePrevious\"",
               "type" : "integer",
               "readOnly" : true
            },
            "StatePrevious" : {
               "description" : "added via include \"StatePrevious\"",
               "type" : "string",
               "readOnly" : true
            },
            "StateType" : {
               "type" : "string",
               "readOnly" : true
            },
            "TicketID" : {
               "type" : "integer",
               "readOnly" : true
            },
            "TicketNumber" : {
               "type" : "string",
               "readOnly" : true
            },
            "Title" : {
               "type" : "string",
               "readOnly" : true
            },
            "Type" : {
               "type" : "string",
               "readOnly" : true
            },
            "TypeID" : {
               "type" : "integer",
               "readOnly" : true
            },
            "UnlockTimeout" : {
               "type" : "integer",
               "readOnly" : true
            },
            "Unseen" : {
               "description" : "added via include \"Unseen\"",
               "type" : "integer",
               "readOnly" : true
            },
            "UntilTime" : {
               "type" : "integer",
               "readOnly" : true
            },
            "WatcherID" : {
               "description" : "the ID of the watcher, if the current user is watching this ticket, added via include \"WatcherID\"",
               "type" : "integer",
               "readOnly" : true
            },
            "Watchers" : {
               "description" : "added via include \"Watchers\"",
               "type" : "array",
               "items" : {
                  "$ref" : "#/definitions/_Watcher_json"
               },
               "readOnly" : true
            }
         },
         "required" : [
            "Age",
            "ChangeBy",
            "Changed",
            "ContactID",
            "CreateBy",
            "Created",
            "LinkCount",
            "LockID",
            "OrganisationID",
            "OwnerID",
            "PendingTime",
            "PendingTimeUnix",
            "PriorityID",
            "QueueID",
            "ResponsibleID",
            "StateID",
            "TicketID",
            "TicketNumber",
            "Title",
            "TypeID",
            "Unseen",
            "UntilTime"
         ]
      },
      "_Watcher_json" : {
         "$id" : "Watcher.json",
         "$schema" : "http://json-schema.org/draft-07/schema",
         "description" : "The watcher object.",
         "type" : "object",
         "properties" : {
            "ChangeBy" : {
               "type" : "integer",
               "readOnly" : true
            },
            "ChangeTime" : {
               "type" : "string",
               "readOnly" : true
            },
            "CreateBy" : {
               "type" : "integer",
               "readOnly" : true
            },
            "CreateTime" : {
               "type" : "string",
               "readOnly" : true
            },
            "ID" : {
               "type" : "integer",
               "readOnly" : true
            },
            "Object" : {
               "description" : "The type of the object.",
               "type" : "string",
               "readOnly" : true
            },
            "ObjectID" : {
               "description" : "The ID of the object.",
               "type" : "string",
               "readOnly" : true
            },
            "UserID" : {
               "type" : "integer",
               "readOnly" : true
            }
         },
         "required" : [
            "ChangeBy",
            "ChangeTime",
            "CreateBy",
            "CreateTime",
            "ID",
            "Object",
            "ObjectID",
            "UserID"
         ]
      }
   }
}
